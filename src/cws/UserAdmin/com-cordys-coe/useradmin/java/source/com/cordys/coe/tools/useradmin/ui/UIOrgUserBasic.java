/*
  This class has been generated by the Code Generator
*/

package com.cordys.coe.tools.useradmin.ui;

import java.util.ArrayList;
import java.util.Vector;

import com.cordys.coe.tools.useradmin.cordys.CordysUser;
import com.cordys.coe.tools.useradmin.util.Util;
import com.cordys.cpc.bsf.busobject.BSF;
import com.cordys.cpc.bsf.busobject.BusObjectArray;
import com.cordys.cpc.bsf.busobject.BusObjectConfig;
import com.cordys.cpc.bsf.busobject.BusObjectIterator;

/**
 * Class representing an entry in the UI list of organizational users.
 * 
 * @author kekema
 *
 */
public class UIOrgUserBasic extends UIOrgUserBasicBase
{
    public UIOrgUserBasic()
    {
        this((BusObjectConfig)null);
    }

    public UIOrgUserBasic(BusObjectConfig config)
    {
        super(config);
    }

    /**
     * Get list of the organizational users.
     * Excluded are system defined users (eg SYSTEM, wcpLicUser, Replica Manager)
     * 
     * @param searchString
     * @return
     */
    public static BusObjectIterator<UIOrgUserBasic> getUIOrgUserBasicObjects(String searchString, String roleDN)
    {
    	Vector<UIOrgUserBasic> result = new Vector<UIOrgUserBasic>();
    	
    	boolean filterByRole = (Util.isSet(roleDN));
    	String currentUser = BSF.getUser();
    	// query cordys org users
    	ArrayList<CordysUser> cordysUsers = CordysUser.getOrgUsersList(searchString, true, filterByRole);
    	// put current user first
    	for (CordysUser cordysUser : cordysUsers)
    	{
    		if (cordysUser.getOrgUserDN().equals(currentUser))
    		{
    			if (!filterByRole || (cordysUser.getRoleDNs().contains(roleDN)))
    			{
    				result.add(constructUIUser(cordysUser));
    				break;
    			}
    		}
    	}
    	for (CordysUser cordysUser : cordysUsers)
    	{
    		if (!cordysUser.getOrgUserDN().equals(currentUser))
    		{    		
    			if (!filterByRole || (cordysUser.getRoleDNs().contains(roleDN)))
    			{   			
    				result.add(constructUIUser(cordysUser));
    			}
    		}
    	}
        return new BusObjectArray<UIOrgUserBasic>(result);
    }
    
    private static UIOrgUserBasic constructUIUser(CordysUser cordysUser)
    {
		UIOrgUserBasic uiOrgUserBasic = new UIOrgUserBasic();
		uiOrgUserBasic.makeTransient();
		uiOrgUserBasic.setDN(cordysUser.getOrgUserDN());
		// compose description from full user name + osidentity for non-anonymous users
		if ("anonymous".equals(cordysUser.getDescription()))
		{
			uiOrgUserBasic.setDescription(cordysUser.getDescription());
		}
		else
		{
			uiOrgUserBasic.setDescription(cordysUser.getDescription() + " (" + cordysUser.getOSIdentity() + ")");
		}
		return uiOrgUserBasic;
    }

    public void onInsert()
    {
    	// N.A.
    }

    public void onUpdate()
    {
    	// N.A.
    }

    public void onDelete()
    {
    	// N.A.
    }

}
