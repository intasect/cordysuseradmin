
<XFormDesigntime
	xmlns:cws="http://schemas.cordys.com/cws/1.0"
	type="com.cordys.xforms.XFormDesigntime"
	typeVersion="002481EE-993D-11E2-E030-02C88B2B3B65"
	RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB2EFD2A">
	<DocumentID>0027132C-F779-11E2-F8DA-2482DB2EDD2A</DocumentID>
	<Name>UserAssignments</Name>
	<Description>UserAssignments</Description>
	<CreatedBy>cordysadm</CreatedBy>
	<CreationDate>2013-05-27T15:14:14.884</CreationDate>
	<Notes/>
	<XFormContent>
		<xformhtml
			xmlns="http://schemas.cordys.com/1.0/xform"
			xmlns:xforms="http://www.w3.org/2002/xforms/cr"
			xmlns:ev="http://www.w3.org/2001/xml-events"
			xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
			xformsversion="2"
			focusatstartup="true"
			showNotify="true"
			showError="true">
			<xhead>
				<script
					src="com/ekemait/useradmin/js/useradmin.js"
					documentID="0027132C-F779-11E3-F2AE-B66E4CE737C6"
				/>
				<xforms:model
					xmlns:xforms="http://www.w3.org/2002/xforms/cr"
					xmlns:ev="http://www.w3.org/2001/xml-events"
					xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
					id="UIOrgUserBasicModel"
					wcpforms:businessElement="tns:UIOrgUserBasic"
					wcpforms:automatic="false"
					wcpforms:gateway="com.eibus.web.soap.Gateway.wcp"
					singleTransaction="false"
					promptToSave="false"
					isConstraintValidation="false"
					isInitializationRequired="false"
					isApplyAccessControl="false">
					<xforms:instance
						xmlns:xforms="http://www.w3.org/2002/xforms/cr"
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
						wcpforms:iteratorSize="50">
						<wcpforms:dataset
							src="http://schemas.cordys.com/coe/useradmin/ui/1.0/GetUIOrgUserBasicObjects"
							operationName="GetUIOrgUserBasicObjects"
							type="get"
							wcpforms:wsguid="0027132C-F779-11E2-F8DA-2706C1B91D2A">
							<searchString
								xmlns="http://schemas.cordys.com/coe/useradmin/ui/1.0"
							/>
						</wcpforms:dataset>
					</xforms:instance>
					<wcpforms:xpathmetainfo
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms">
						<wcpforms:namespace
							prefix="xmlns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
						<wcpforms:namespace
							prefix="tns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
					</wcpforms:xpathmetainfo>
					<wcpforms:instanceschema/>
				</xforms:model>
				<xforms:model
					xmlns:xforms="http://www.w3.org/2002/xforms/cr"
					xmlns:ev="http://www.w3.org/2001/xml-events"
					xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
					id="GetUIRoleTreesModel"
					wcpforms:businessElement="tns:return"
					wcpforms:automatic="false"
					wcpforms:gateway="com.eibus.web.soap.Gateway.wcp"
					wcpforms:nontransactional="true"
					singleTransaction="false"
					promptToSave="true"
					isConstraintValidation="false"
					isInitializationRequired="false"
					isApplyAccessControl="false">
					<xforms:instance
						xmlns:xforms="http://www.w3.org/2002/xforms/cr"
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
						wcpforms:iteratorSize="50">
						<wcpforms:dataset
							src="http://schemas.cordys.com/coe/useradmin/ui/1.0/GetUIRoleTrees"
							operationName="GetUIRoleTrees"
							type="get"
							wcpforms:wsguid="0027132C-F779-11E2-F895-50936EB69D2A">
							<OrgUserDN
								xmlns="http://schemas.cordys.com/coe/useradmin/ui/1.0"
							/>
						</wcpforms:dataset>
					</xforms:instance>
					<wcpforms:xpathmetainfo
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms">
						<wcpforms:namespace
							prefix="xmlns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
						<wcpforms:namespace
							prefix="tns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
					</wcpforms:xpathmetainfo>
					<wcpforms:instanceschema/>
					<xforms:action
						ev:event="xforms-onrequest">
						<xforms:GetUIRoleTreesModel_OnRequest/>
					</xforms:action>
					<xforms:action
						ev:event="xforms-onresponse">
						<xforms:GetUIRoleTreesModel_OnResponse/>
					</xforms:action>
				</xforms:model>
				<xforms:model
					xmlns:xforms="http://www.w3.org/2002/xforms/cr"
					xmlns:ev="http://www.w3.org/2001/xml-events"
					xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
					id="UpdateAssignedRolesModel"
					wcpforms:businessElement="tns:return"
					wcpforms:automatic="false"
					wcpforms:gateway="com.eibus.web.soap.Gateway.wcp"
					wcpforms:nontransactional="true"
					singleTransaction="false"
					promptToSave="true"
					isConstraintValidation="false"
					isInitializationRequired="false"
					isApplyAccessControl="false">
					<xforms:instance
						xmlns:xforms="http://www.w3.org/2002/xforms/cr"
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
						wcpforms:iteratorSize="50">
						<wcpforms:dataset
							src="http://schemas.cordys.com/coe/useradmin/ui/1.0/UpdateAssignedRoles"
							operationName="UpdateAssignedRoles"
							type="get"
							wcpforms:wsguid="0027132C-F779-11E2-F898-EC437057DD2A">
							<OrgUserDN
								xmlns="http://schemas.cordys.com/coe/useradmin/ui/1.0"
							/>
							<AssignedRoles
								xmlns="http://schemas.cordys.com/coe/useradmin/ui/1.0"
							/>
						</wcpforms:dataset>
					</xforms:instance>
					<wcpforms:xpathmetainfo
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms">
						<wcpforms:namespace
							prefix="xmlns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
						<wcpforms:namespace
							prefix="tns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
					</wcpforms:xpathmetainfo>
					<wcpforms:instanceschema/>
					<xforms:action
						ev:event="xforms-onrequest">
						<xforms:UpdateAssignedRolesModel_OnRequest/>
					</xforms:action>
					<xforms:action
						ev:event="xforms-onresponse">
						<xforms:UpdateAssignedRolesModel_OnResponse/>
					</xforms:action>
				</xforms:model>
				<xforms:model
					xmlns:xforms="http://www.w3.org/2002/xforms/cr"
					xmlns:ev="http://www.w3.org/2001/xml-events"
					xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
					id="UIUserTasksModel"
					wcpforms:businessElement="tns:UIUserTasks"
					wcpforms:automatic="false"
					wcpforms:gateway="com.eibus.web.soap.Gateway.wcp"
					singleTransaction="false"
					promptToSave="false"
					isConstraintValidation="false"
					isInitializationRequired="false"
					isApplyAccessControl="false">
					<xforms:instance
						xmlns:xforms="http://www.w3.org/2002/xforms/cr"
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
						wcpforms:iteratorSize="50">
						<wcpforms:dataset
							src="http://schemas.cordys.com/coe/useradmin/ui/1.0/GetUIUserTasks"
							operationName="GetUIUserTasks"
							type="get"
							wcpforms:wsguid="0027132C-F779-11E2-F87C-153F6F343D2A">
							<OrgUserDN
								xmlns="http://schemas.cordys.com/coe/useradmin/ui/1.0"
								fieldRef="OrgUserDN"
							/>
						</wcpforms:dataset>
					</xforms:instance>
					<wcpforms:xpathmetainfo
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms">
						<wcpforms:namespace
							prefix="xmlns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
						<wcpforms:namespace
							prefix="tns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
					</wcpforms:xpathmetainfo>
					<wcpforms:instanceschema/>
					<xforms:action
						ev:event="xforms-onresponse">
						<xforms:UIUserTasksModel_OnResponse/>
					</xforms:action>
					<xforms:action
						ev:event="xforms-onrequest">
						<xforms:UIUserTasksModel_OnRequest/>
					</xforms:action>
					<xforms:action
						ev:event="xforms-onsynchronized">
						<xforms:UIUserTasksModel_OnSynchronized/>
					</xforms:action>
				</xforms:model>
				<xforms:model
					xmlns:xforms="http://www.w3.org/2002/xforms/cr"
					xmlns:ev="http://www.w3.org/2001/xml-events"
					xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
					id="UIUserTeamsModel"
					wcpforms:businessElement="tns:UIUserTeams"
					wcpforms:automatic="false"
					wcpforms:gateway="com.eibus.web.soap.Gateway.wcp"
					singleTransaction="false"
					promptToSave="false"
					isConstraintValidation="false"
					isInitializationRequired="false"
					isApplyAccessControl="false">
					<xforms:instance
						xmlns:xforms="http://www.w3.org/2002/xforms/cr"
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms"
						wcpforms:iteratorSize="50">
						<wcpforms:dataset
							src="http://schemas.cordys.com/coe/useradmin/ui/1.0/GetUIUserTeams"
							operationName="GetUIUserTeams"
							type="get"
							wcpforms:wsguid="0027132C-F779-11E2-F7E1-F21D449592DA">
							<OrgUserDN
								xmlns="http://schemas.cordys.com/coe/useradmin/ui/1.0"
							/>
						</wcpforms:dataset>
					</xforms:instance>
					<wcpforms:xpathmetainfo
						xmlns:wcpforms="http://schemas.cordys.com/wcp/xforms">
						<wcpforms:namespace
							prefix="xmlns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
						<wcpforms:namespace
							prefix="tns">http://schemas.cordys.com/coe/useradmin/ui/1.0</wcpforms:namespace>
					</wcpforms:xpathmetainfo>
					<wcpforms:instanceschema/>
					<xforms:action
						ev:event="xforms-onresponse">
						<xforms:UIUserTeamsModel_OnResponse/>
					</xforms:action>
					<xforms:action
						ev:event="xforms-onbeforesynchronize">
						<xforms:UIUserTeamsModel_BeforeSynchronize/>
					</xforms:action>
					<xforms:action
						ev:event="xforms-onrequest">
						<xforms:UIUserTeamsModel_OnRequest/>
					</xforms:action>
					<xforms:action
						ev:event="xforms-onsynchronized">
						<xforms:UIUserTeamsModel_OnSynchronized/>
					</xforms:action>
				</xforms:model>
				<xml
					xmlns="">
					<xml
						id="treeAssignedRolesSchema">
						<TreeSchema>
							<searchPath>//*[local-name()='user']/</searchPath>
							<Root>
								<description>Assigned Roles</description>
							</Root>
							<TreeItem>
								<searchPath>*[local-name()='role']</searchPath>
								<description>*[local-name()='description']</description>
								<onselect>selectRoleHandler</onselect>
								<icon>/cordys/wcp/usermanager/icons/organizationalrole.gif</icon>
							</TreeItem>
							<multipleSelect>true</multipleSelect>
						</TreeSchema>
					</xml>
					<xml
						id="treeAssignedRolesData">
						<data/>
					</xml>
					<xml
						id="treeUnassignedRolesSchema">
						<TreeSchema>
							<searchPath>//*[local-name()='roles']/</searchPath>
							<Root>
								<description>Unassigned Roles</description>
							</Root>
							<TreeItem>
								<searchPath>*[local-name()='role']</searchPath>
								<description>*[local-name()='description']</description>
								<onselect>selectRoleHandler</onselect>
								<icon>/cordys/wcp/usermanager/icons/organizationalrole.gif</icon>
							</TreeItem>
							<multipleSelect>true</multipleSelect>
						</TreeSchema>
					</xml>
					<xml
						id="treeUnassignedRolesData">
						<data/>
					</xml>
				</xml>
			</xhead>
			<xbody>
				<xforms:group
					wcpforms:layout="vertical"
					id="xbody_group"
					wcpforms:labelalign="ontop">
					<xforms:group
						appearance="group"
						wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
						id="grpMain"
						wcpforms:layout="horizontal"
						wcpforms:class="v_layout"
						wcpforms:size="1154px 601px"
						wcpforms:labelalign="ontop">
						<xforms:select1
							appearance="compact"
							wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsList"
							id="listUsers"
							doEBIValidate="false"
							initializeValueSets="0"
							wcpforms:enumerated="false"
							multiple="false"
							wcpforms:dataType="string"
							wcpforms:textalign="left_align"
							wcpforms:class="h_layout"
							wcpforms:size="190px 583px">
							<xforms:label
								textIdentifier="0027132C-F779-11E2-F8DA-2482DB2B1D2A"
								wcpforms:class="v_label">Users</xforms:label>
							<xforms:itemset
								xmlns:xforms="http://www.w3.org/2002/xforms/cr"
								model="UIOrgUserBasicModel">
								<xforms:label
									ref="tns:Description"
								/>
								<xforms:value
									ref="tns:DN"
								/>
							</xforms:itemset>
							<xforms:action
								ev:event="xforms-value-changed">
								<xforms:listUsers_Change/>
							</xforms:action>
						</xforms:select1>
						<xforms:group
							appearance="tabgroup"
							wcpforms:orientation="top"
							wcpforms:textDirection="horizontal"
							wcpforms:scrollBy="roller"
							wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsTabGroup"
							id="tabgroup"
							isNavigationEnabled="true"
							wcpforms:class="h_layout"
							wcpforms:size="823px 583px">
							<xforms:group
								appearance="tabpage"
								wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsTabPage"
								id="tabpgRoles"
								wcpforms:layout="horizontal"
								wcpforms:class="simplecontainer"
								wcpforms:labelalign="ontop">
								<xforms:label
									textIdentifier="0027132C-F779-11E2-F8DC-0E314D7EBD2A">Roles</xforms:label>
								<div
									xmlns="http://www.w3.org/2002/xforms/cr"
									xformextendedname="tree"
									id="trRlsUnassigned"
									namespace="wcp.library.ui.Tree"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.extensions.Tree"
									leftFolding="false"
									model=""
									treeSchema="treeUnassignedRolesSchema"
									treeData="treeUnassignedRolesData"
									wcpforms:layout="vertical"
									wcpforms:class="h_layout"
									wcpforms:size="311px 520px"
								/>
								<xforms:group
									appearance="group"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
									id="grpRlsMiddle"
									wcpforms:layout="vertical"
									wcpforms:class="h_layout"
									wcpforms:size="97px 508px"
									wcpforms:labelalign="ontop">
									<xforms:group
										appearance="group"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
										id="group4"
										wcpforms:layout="vertical"
										wcpforms:class="v_layout_i"
										wcpforms:size="null 197px"
										wcpforms:labelalign="ontop"
									/>
									<xforms:group
										appearance="controlbox"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsControlbox"
										id="controlbox3"
										controltype="button"
										wcpforms:layout="horizontal"
										wcpforms:class="v_layout_i autoextent"
										wcpforms:align="left_align"
										wcpforms:size="null auto">
										<xforms:trigger
											wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
											id="btnAssignRole"
											wcpforms:class="h_button"
											wcpforms:size="null 2em">
											<xforms:label
												textIdentifier="0027132C-F779-11E2-F702-163D49F9D5E8">&gt;&gt;</xforms:label>
											<xforms:action
												xmlns:ev="http://www.w3.org/2001/xml-events"
												ev:event="xforms-activate">
												<xforms:btnAssignRole_Click/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
									<xforms:group
										appearance="controlbox"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsControlbox"
										id="controlbox4"
										controltype="button"
										wcpforms:layout="horizontal"
										wcpforms:class="v_layout_i autoextent"
										wcpforms:align="left_align"
										wcpforms:size="null auto">
										<xforms:trigger
											wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
											id="btnUnassignRole"
											wcpforms:class="h_button"
											wcpforms:size="null 2em">
											<xforms:label
												textIdentifier="0027132C-F779-11E2-F702-163D49F915E8">&lt;&lt;</xforms:label>
											<xforms:action
												xmlns:ev="http://www.w3.org/2001/xml-events"
												ev:event="xforms-activate">
												<xforms:btnUnassignRole_Click/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
								</xforms:group>
								<div
									xmlns="http://www.w3.org/2002/xforms/cr"
									xformextendedname="tree"
									id="trRlsAssigned"
									namespace="wcp.library.ui.Tree"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.extensions.Tree"
									leftFolding="false"
									model=""
									treeSchema="treeAssignedRolesSchema"
									treeData="treeAssignedRolesData"
									wcpforms:layout="vertical"
									wcpforms:class="h_layout"
									wcpforms:size="312px 520px"
								/>
							</xforms:group>
							<xforms:group
								appearance="tabpage"
								wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsTabPage"
								id="tabpgTasks"
								model="UIUserTasksModel"
								wcpforms:loadOnDemand="false"
								wcpforms:layout="horizontal"
								wcpforms:class="simplecontainer"
								wcpforms:labelalign="ontop">
								<xforms:label
									textIdentifier="0027132C-F779-11E2-F8DC-0E314D7DFD2A">Tasks</xforms:label>
								<xforms:select1
									appearance="compact"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsList"
									id="listTasksUnassigned"
									doEBIValidate="false"
									initializeValueSets="0"
									wcpforms:enumerated="false"
									multiple="false"
									wcpforms:class="h_layout"
									wcpforms:size="202px 520px">
									<xforms:label
										textIdentifier="0027132C-F779-11E2-F7C7-C29779E2D2DA"
										wcpforms:class="v_label">Unassigned</xforms:label>
								</xforms:select1>
								<xforms:group
									appearance="group"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
									id="grpTasksMiddle"
									wcpforms:layout="vertical"
									wcpforms:class="h_layout"
									wcpforms:size="97px 519px"
									wcpforms:labelalign="ontop">
									<xforms:group
										appearance="group"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
										id="group3"
										wcpforms:layout="vertical"
										wcpforms:class="v_layout_i"
										wcpforms:size="null 196px"
										wcpforms:labelalign="ontop"
									/>
									<xforms:group
										appearance="controlbox"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsControlbox"
										id="controlbox5"
										controltype="button"
										wcpforms:layout="horizontal"
										wcpforms:class="v_layout"
										wcpforms:align="left_align"
										wcpforms:size="101px 31px">
										<xforms:trigger
											wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
											id="btnAssignTask"
											wcpforms:class="h_button"
											wcpforms:size="8.01em 2.01em">
											<xforms:label
												textIdentifier="0027132C-F779-11E2-F702-163D49F9D5E8">&gt;&gt;</xforms:label>
											<xforms:action
												xmlns:ev="http://www.w3.org/2001/xml-events"
												ev:event="xforms-activate">
												<xforms:btnAssignTask_Click/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
									<xforms:group
										appearance="controlbox"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsControlbox"
										id="controlbox6"
										controltype="button"
										wcpforms:layout="horizontal"
										wcpforms:class="v_layout autoextent"
										wcpforms:align="left_align"
										wcpforms:size="99px auto">
										<xforms:trigger
											wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
											id="btnUnassignTask"
											wcpforms:class="h_button"
											wcpforms:size="8.01em 1.91em">
											<xforms:label
												textIdentifier="0027132C-F779-11E2-F702-163D49F915E8">&lt;&lt;</xforms:label>
											<xforms:action
												xmlns:ev="http://www.w3.org/2001/xml-events"
												ev:event="xforms-activate">
												<xforms:btnUnassignTask_Click/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
								</xforms:group>
								<xforms:select1
									appearance="compact"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsList"
									id="listTasksAssigned"
									doEBIValidate="false"
									initializeValueSets="0"
									wcpforms:enumerated="false"
									multiple="false"
									wcpforms:class="h_layout"
									wcpforms:size="202px 520px">
									<xforms:label
										textIdentifier="0027132C-F779-11E2-F7C7-C29779E212DA"
										wcpforms:class="v_label">Assigned</xforms:label>
								</xforms:select1>
								<xforms:select1
									appearance="compact"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsList"
									id="listRoleTasks"
									doEBIValidate="false"
									initializeValueSets="0"
									wcpforms:enumerated="false"
									multiple="false"
									wcpforms:class="h_layout"
									wcpforms:size="202px 520px">
									<xforms:label
										textIdentifier="0027132C-F779-11E2-F87F-80A2D29CFD2A"
										wcpforms:class="v_label">RoleTasks</xforms:label>
								</xforms:select1>
							</xforms:group>
							<xforms:group
								appearance="tabpage"
								wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsTabPage"
								id="tabpgTeams"
								model="UIUserTeamsModel"
								wcpforms:layout="horizontal"
								wcpforms:class="simplecontainer"
								wcpforms:labelalign="ontop">
								<xforms:label
									textIdentifier="0027132C-F779-11E2-F8DC-0E314D7D3D2A">Teams</xforms:label>
								<xforms:select1
									appearance="compact"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsList"
									id="listTeamsUnassigned"
									doEBIValidate="false"
									initializeValueSets="0"
									wcpforms:enumerated="false"
									multiple="false"
									wcpforms:dataType="string"
									wcpforms:textalign="left_align"
									wcpforms:class="h_layout"
									wcpforms:size="217px 520px">
									<xforms:label
										textIdentifier="0027132C-F779-11E2-F7C7-C29779E2D2DA"
										wcpforms:class="v_label">Unassigned</xforms:label>
									<xforms:itemset
										xmlns:xforms="http://www.w3.org/2002/xforms/cr">
										<xforms:label
											ref="tns:Description"
										/>
										<xforms:value
											ref="tns:SeqNo"
										/>
									</xforms:itemset>
									<xforms:action
										ev:event="xforms-value-changed">
										<xforms:listTeamsUnassigned_Change/>
									</xforms:action>
								</xforms:select1>
								<xforms:group
									appearance="group"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
									id="grpTeamsMiddle"
									wcpforms:layout="vertical"
									wcpforms:class="h_layout"
									wcpforms:size="97px 518px"
									wcpforms:labelalign="ontop">
									<xforms:group
										appearance="group"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
										id="group2"
										wcpforms:layout="vertical"
										wcpforms:class="v_layout_i"
										wcpforms:size="null 196px"
										wcpforms:labelalign="ontop"
									/>
									<xforms:group
										appearance="controlbox"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsControlbox"
										id="controlbox8"
										controltype="button"
										wcpforms:layout="horizontal"
										wcpforms:class="v_layout_i autoextent"
										wcpforms:align="left_align"
										wcpforms:size="null auto">
										<xforms:trigger
											wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
											id="btnAssignTeam"
											wcpforms:class="h_button"
											wcpforms:size="null 2em">
											<xforms:label
												textIdentifier="0027132C-F779-11E2-F702-163D49F9D5E8">&gt;&gt;</xforms:label>
											<xforms:action
												xmlns:ev="http://www.w3.org/2001/xml-events"
												ev:event="xforms-activate">
												<xforms:btnAssignTeam_Click/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
									<xforms:group
										appearance="controlbox"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsControlbox"
										id="controlbox9"
										controltype="button"
										wcpforms:layout="horizontal"
										wcpforms:class="v_layout_i autoextent"
										wcpforms:align="left_align"
										wcpforms:size="null auto">
										<xforms:trigger
											wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
											id="btnUnassignTeam"
											wcpforms:class="h_button"
											wcpforms:size="null 2em">
											<xforms:label
												textIdentifier="0027132C-F779-11E2-F702-163D49F915E8">&lt;&lt;</xforms:label>
											<xforms:action
												xmlns:ev="http://www.w3.org/2001/xml-events"
												ev:event="xforms-activate">
												<xforms:btnUnassignTeam_Click/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
								</xforms:group>
								<xforms:select1
									appearance="compact"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsList"
									id="listTeamsAssigned"
									doEBIValidate="false"
									initializeValueSets="0"
									wcpforms:enumerated="false"
									multiple="false"
									wcpforms:class="h_layout"
									wcpforms:size="217px 520px">
									<xforms:label
										textIdentifier="0027132C-F779-11E2-F7C7-C29779E212DA"
										wcpforms:class="v_label">Assigned</xforms:label>
									<xforms:action
										ev:event="xforms-value-changed">
										<xforms:listTeamsAssigned_Change/>
									</xforms:action>
								</xforms:select1>
								<xforms:group
									appearance="group"
									wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsGroup"
									id="groupUnit"
									wcpforms:layout="vertical"
									wcpforms:class="h_layout"
									wcpforms:size="170px 518px"
									wcpforms:labelalign="ontop">
									<xforms:select1
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsSelect"
										id="slctUnit"
										doEBIValidate="false"
										wcpforms:enumerated="false"
										multiple="false"
										ref="tns:PrincipleUnitID"
										initializeValueSets="0"
										wcpforms:class="v_layout_i"
										wcpforms:size="171px auto">
										<xforms:label
											textIdentifier="0027132C-F779-11E2-F845-D87A2897BD2A"
											wcpforms:class="v_label">Principle Unit</xforms:label>
										<xforms:action
											ev:event="xforms-value-changed">
											<xforms:slctUnit_Change/>
										</xforms:action>
									</xforms:select1>
									<xforms:label
										appearance="richtext"
										wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsRichtext"
										id="rte1"
										textIdentifier="0027132C-F779-11E3-F5B7-536CB3203F70"
										wcpforms:class="f_layout"
										wcpforms:size="154px 91px"
										wcpforms:position="0px 420px">
										<![CDATA[<SPAN style="FONT-FAMILY: arial,helvetica,sans-serif; FONT-SIZE: small">In the unassigned list, team/role combinations will be populated as per the roles assigned to the user.</SPAN>]]>
									</xforms:label>
								</xforms:group>
							</xforms:group>
							<xforms:action
								external="true"
								ev:event="ontabfocus">
								<xforms:tabgroup_ontabfocus/>
							</xforms:action>
						</xforms:group>
						<xforms:group
							appearance="controlbox"
							wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsControlbox"
							id="controlbox1"
							controltype="button"
							wcpforms:layout="vertical"
							wcpforms:class="f_layout"
							wcpforms:align="left_align"
							wcpforms:size="10em 91px"
							wcpforms:position="1040px 30px">
							<xforms:trigger
								wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
								id="btnRefresh"
								wcpforms:class="v_button"
								wcpforms:size="null 2em">
								<xforms:label
									textIdentifier="0027132C-F779-11E2-F8DC-B08FB4BF9D2A">Refresh</xforms:label>
								<xforms:action
									ev:event="xforms-activate">
									<xforms:btnRefresh_Click/>
								</xforms:action>
							</xforms:trigger>
							<xforms:trigger
								wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
								id="btnSave"
								wcpforms:class="v_button"
								wcpforms:size="null 2em">
								<xforms:label
									textIdentifier="0027132C-F779-11E2-F8DC-0E314D7B7D2A">Save</xforms:label>
								<xforms:action
									ev:event="xforms-activate">
									<xforms:btnSave_Click/>
								</xforms:action>
							</xforms:trigger>
							<xforms:trigger
								wcpforms:designLibrary="cas.xforms.designerlibrary.controls.XFormsButton"
								id="btnUndo"
								wcpforms:class="v_button"
								wcpforms:size="null 2em">
								<xforms:label
									textIdentifier="0027132C-F779-11E3-EBE9-AA2F0FA3B68F">Undo</xforms:label>
								<xforms:action
									ev:event="xforms-activate">
									<xforms:btnUndo_Click/>
								</xforms:action>
							</xforms:trigger>
						</xforms:group>
					</xforms:group>
				</xforms:group>
				<div
					xmlns="http://www.w3.org/2002/xforms/cr"
					id="appInfoBar"
					xformextendedname="StatusBar"
					namespace="wcp.library.ui.StatusBar"
					wcpforms:designLibrary="cas.xforms.designerlibrary.controls.extensions.StatusBar"
					contentElementId="xbody_group"
					position="footer">
					<table
						xmlns=""
						width="100%"
						border="1">
						<tr
							valign="top">
							<td
								width="100%"
								id="NewPanel1">New Panel1</td>
						</tr>
					</table>
				</div>
			</xbody>
			<xformsscript>
				<![CDATA[/*
 * UI for making role/task/team assignments for a selected user.
 * Supported by a server-side interface in WSApps
 */
 
var uiTasks = new Array();        // array of task objects; has taskdata for list of assigned/unassigned tasks
                                  // the seqNo/value in the list points to the array entry
var teamRoles = new Array();
var units = new Array();
var currentTabId = null;
var rolesChanged = false;
var tasksChanged = false;
var teamsChanged = false;
var rolesLoaded = false;
var tasksLoaded = false;
var teamsLoaded = false;

var artifactInfo = "";
var statusInfo = "";

/*
 * Moves all selected unassigned roles to the assigned roles list
 */
function btnAssignRole_Click(eventObject)
{
    var selectedItems = trRlsUnassigned.getSelectedItems();
    for (var itemIndex in selectedItems)
    {
        if (selectedItems[itemIndex] != trRlsUnassigned.root)
        {
            trRlsAssigned.root.addItem(selectedItems[itemIndex].data);
            selectedItems[itemIndex].remove();
            rolesChanged = true;
        }
    } 
    if (rolesChanged)
    {
        tabpgRoles.setCaption("Roles*");
        checkEnableDisable();  
    }
}

/*
 * Moves all selected assigned roles to the unassigned roles list
 */
function btnUnassignRole_Click(eventObject)
{
    var selectedItems = trRlsAssigned.getSelectedItems();
    for (var itemIndex in selectedItems)
    {
        if (selectedItems[itemIndex] != trRlsAssigned.root)
        {
            trRlsUnassigned.root.addItem(selectedItems[itemIndex].data);
            selectedItems[itemIndex].remove()
            rolesChanged = true;
        }     
    } 
    if (rolesChanged)
    {
        tabpgRoles.setCaption("Roles*");
        checkEnableDisable();  
    }    
}

/*
 * Get all assigned roles for the user, each role with it's tree of subroles.
 * See WSApps UIUserRoles class
 */
function GetUIRoleTreesModel_OnRequest(eventObject)
{
    var orgUserDN = listUsers.getValue();
    if ((orgUserDN != null) && (orgUserDN != ""))
    {
        var request = eventObject.request;
        var orgUserDNNode = cordys.selectXMLNode(request, ".//*[local-name()='OrgUserDN']");
        cordys.setTextContent(orgUserDNNode, orgUserDN);
    }
}

/*
 * Process the GetUIRoleTrees response by setting the tree data
 */
function GetUIRoleTreesModel_OnResponse(eventObject)
{
    if (eventObject.httpStatusCode != 500)
    {
        // for undo situation:
        tabpgRoles.setCaption("Roles");
        rolesChanged = false;
        checkEnableDisable();
            
        // assigned roles
        var response = eventObject.response;
        var userNode = cordys.selectXMLNode(response, ".//*[local-name()='tree']/*[local-name()='assigned']/*[local-name()='user']");
        var dataAssignedRolesNode = cordys.selectXMLNode(treeAssignedRolesData.XMLDocument.documentElement, "//*[local-name()='data']");
        var existingNode = cordys.selectXMLNode(dataAssignedRolesNode, "/data/*[1]");
        // add or replace tree data
        if (existingNode == null)
        {
            cordys.appendXMLNode(userNode, dataAssignedRolesNode);
        }
        else
        {
            cordys.replaceXMLNode(dataAssignedRolesNode, userNode, existingNode);
        }
        trRlsAssigned.setTreeData("treeAssignedRolesData"); 
        trRlsAssigned.root.expand();    
    
        // unassigned roles
        var rolesNode = cordys.selectXMLNode(response, ".//*[local-name()='tree']/*[local-name()='unassigned']/*[local-name()='roles']");
        var dataUnassignedRolesNode = cordys.selectXMLNode(treeUnassignedRolesData.XMLDocument.documentElement, "//*[local-name()='data']");
        existingNode = cordys.selectXMLNode(dataUnassignedRolesNode, "/data/*[1]");
        if (existingNode == null)
        {
            cordys.appendXMLNode(rolesNode, dataUnassignedRolesNode);
        }
        else
        {
            cordys.replaceXMLNode(dataUnassignedRolesNode, rolesNode, existingNode);
        }
        trRlsUnassigned.setTreeData("treeUnassignedRolesData");    
        trRlsUnassigned.root.expand();    
        rolesLoaded = true;
    }
    statusInfo = "";
    setAppInfoBar();     
}

/*
 * Initialize and start off by reading the organizations
 */
function Form_InitDone(eventObject)
{
    setAppInfoBar();     
    listTasksAssigned.multipleSelect = true;
    listTasksUnassigned.multipleSelect = true;  
    listTeamsAssigned.multipleSelect = true;
    listTeamsUnassigned.multipleSelect = true;    
    // TODO: use CSS
    trRlsUnassigned.style.borderStyle = "solid";
    trRlsUnassigned.style.borderWidth = "1px";
    trRlsUnassigned.style.borderColor = "#96caea";
    trRlsAssigned.style.borderStyle = "solid";
    trRlsAssigned.style.borderWidth = "1px";
    trRlsAssigned.style.borderColor = "#96caea";
    readUsers();
}

function readUsers()
{
    // get list of org users and select last selected user or current user
    var lastValue = listUsers.getValue();
    UIOrgUserBasicModel.reset();
    var allItems = listUsers.getAllOptions();
    if (allItems.length > 0)
    {
        listUsers.setValue(lastValue);
        if (listUsers.getValue() == "")
        {
            // select first one which is current user
            listUsers.setValue(allItems[0].value);
        }
    }
}

/*
 * Upon selecting another user, refresh the data
 * When data is in update mode, the organizations list will be disabled as to
 * prevent any change here
 */
function listUsers_Change(eventObject)
{
    readData();
}

/*
 * For the current selected org user, read the roles, tasks, team assignments
 */
function readData()
{
    artifactInfo = listUsers.getValue();
    rolesLoaded = false;
    tasksLoaded = false;
    teamsLoaded = false;
    if (currentTabId == "tabpgRoles")
    {
        getUserRoles();
    }
    else if (currentTabId == "tabpgTasks")
    {
        getUserTasks();
    }
    else if (currentTabId == "tabpgTeams")
    {
        getUserTeams();
    }
}

function getUserRoles()
{
    var dataAssignedRolesNode = cordys.selectXMLNode(treeAssignedRolesData.XMLDocument.documentElement, "//*[local-name()='data']");
    var existingNode = cordys.selectXMLNode(dataAssignedRolesNode, "/data/*[1]");
    if (existingNode != null)
    {
        dataAssignedRolesNode.removeChild(existingNode);
        trRlsAssigned.setTreeData("treeAssignedRolesData");
    }
    var dataUnassignedRolesNode = cordys.selectXMLNode(treeUnassignedRolesData.XMLDocument.documentElement, "//*[local-name()='data']");
    existingNode = cordys.selectXMLNode(dataUnassignedRolesNode, "/data/*[1]");    
    if (existingNode != null)
    {
        dataUnassignedRolesNode.removeChild(existingNode);
        trRlsUnassigned.setTreeData("treeUnassignedRolesData");
    }    
    statusInfo = "Reading user roles...";
    setAppInfoBar();
    setTimeout("GetUIRoleTreesModel.reset()", 20);
}

function getUserTasks()
{
    uiTasks.length = 0;
    listTasksUnassigned.removeOptions(listTasksUnassigned.getAllOptions(), false);
    listTasksAssigned.removeOptions(listTasksAssigned.getAllOptions(), false);
    listRoleTasks.removeOptions(listRoleTasks.getAllOptions(), false);
    statusInfo = "Reading user tasks...";
    setAppInfoBar();
    if (getFirstTasksRequest())
    {
        application.showBusy(true, "Caching Tasks Data...");
    }
    setTimeout("UIUserTasksModel.reset()", 20);
}

function getUserTeams()
{
    teamRoles.length = 0;
    listTeamsAssigned.removeOptions(listTeamsAssigned.getAllOptions(),false);
    listTeamsUnassigned.removeOptions(listTeamsUnassigned.getAllOptions(),false);
    statusInfo = "Reading user teams...";
    setAppInfoBar();
    setTimeout("UIUserTeamsModel.reset()", 20);
}

/*
 * Save the role, task and team assignments
 */
function saveData()
{
    artifactInfo = listUsers.getValue();
    if (rolesLoaded && rolesChanged)        // check is rolesLoaded is just safety check
    {
        UpdateAssignedRolesModel.reset();
        if (tasksLoaded && !tasksChanged)
        {
            // refresh tasks as there can be a change in roletasks
            UIUserTasksModel.reset();
        }
        if (teamsLoaded && !teamsChanged)
        {
            // refresh teams as teamrole selection depends on user roles
            UIUserTeamsModel.reset();
        }
    }
    if (tasksLoaded && tasksChanged)
    {
        UIUserTasksModel.synchronize();
    }
    if (teamsLoaded && teamsChanged)
    {
        UIUserTeamsModel.synchronize();
    }
    statusInfo = "";
    setAppInfoBar();     
    application.showBusy(false);    
}

/*
 * Send the top roles from the assigned list to the update request
 */
function UpdateAssignedRolesModel_OnRequest(eventObject)
{
    var orgUserDN = listUsers.getValue();
    if ((orgUserDN != null) && (orgUserDN != ""))
    {
        var request = eventObject.request;
        var assignedRolesNode = cordys.selectXMLNode(request, ".//*[local-name()='AssignedRoles']");
        var rootNodes = trRlsAssigned.root.getChildContainer().childNodes;
        for (var nodeIndex=0;nodeIndex<rootNodes.length;nodeIndex++)
        {
           var roleNode = rootNodes[nodeIndex].data.cloneNode(false);
           cordys.appendXMLNode(roleNode, assignedRolesNode);
        }
        var orgUserDNNode = cordys.selectXMLNode(request, ".//*[local-name()='OrgUserDN']");
        cordys.setTextContent(orgUserDNNode, orgUserDN);
    }
}

/*
 * upon selecting a role, show the DN in the status bar
 */
function selectRoleHandler(selectedNode)
{
    if (selectedNode.data != null)
    {
        var dn = selectedNode.data.getAttribute('dn');
        if (dn == null)
        {
            dn = selectedNode.data.getAttribute('id');
        }
        if (dn != null)
        {
            artifactInfo = dn;
            setAppInfoBar();
        }
    }
}

/*
 * Move selected tasks from unassigned to assigned
 */
function btnAssignTask_Click(eventObject)
{
    var selectedItems = listTasksUnassigned.getSelectedOptions();
    for (var itemIndex in selectedItems)
    {
        listTasksAssigned.addOption(selectedItems[itemIndex],false);
        listTasksUnassigned.removeOption(selectedItems[itemIndex], false);
        // maintain task data - assigned to true
        uiTasks[selectedItems[itemIndex].value].assigned = true;
        tasksChanged = true;   
    }  
    if (tasksChanged)
    {
        editTaskTupleNew();
        tabpgTasks.setCaption("Tasks*");
        checkEnableDisable();
    }
}

/*
 * Move selected tasks from assigned to unassigned
 */
function btnUnassignTask_Click(eventObject)
{
    var selectedItems = listTasksAssigned.getSelectedOptions();
    for (var itemIndex in selectedItems)
    {
        listTasksUnassigned.addOption(selectedItems[itemIndex],false);
        listTasksAssigned.removeOption(selectedItems[itemIndex], false);
        // maintain task data - assigned to false
        uiTasks[selectedItems[itemIndex].value].assigned = false;
        tasksChanged = true;   
    }    
    if (tasksChanged)
    {
        editTaskTupleNew();
        tabpgTasks.setCaption("Tasks*");
        checkEnableDisable();
    }       
}

/*
 * Maintain the tasks in the tuple/new as per the assigned indicator in the global ui Tasks array
 */
function editTaskTupleNew()
{
    if (UIUserTasksModel.activeTuple != null)
    {
        UIUserTasksModel.edit();
        var tupleNew = UIUserTasksModel.getActiveBusinessObject().getNew();
        if (tupleNew != null)
        {
            var uiTaskNodes = cordys.selectXMLNodes(tupleNew, ".//*[local-name()='UITasks']/*[local-name()='UITask']");
            for (var i=0; i < uiTaskNodes.length;  i++)
            {
                var seqNo = cordys.getNodeText(uiTaskNodes[i], ".//*[local-name()='SeqNo']", null);
                if (seqNo != null)
                {
                    var assignedNode = cordys.selectXMLNode(uiTaskNodes[i], ".//*[local-name()='Assigned']");
                    if (assignedNode != null)
                    {
                        var assigned = uiTasks[seqNo].assigned;
                        cordys.setTextContent(assignedNode, assigned.toString());
                    }
                }
            }
        }
    }  
}

/*
 * Process the GetUserTasks response by filling the ui lists and the global uiTasks array.
 */
function UIUserTasksModel_OnResponse(eventObject)
{
    if (eventObject.httpStatusCode != 500)
    {
        // for undo situation:
        tabpgTasks.setCaption("Tasks");
        tasksChanged = false;
        checkEnableDisable();
        
        uiTasks.length = 0;
        listTasksUnassigned.removeOptions(listTasksUnassigned.getAllOptions(), false);
        listTasksAssigned.removeOptions(listTasksAssigned.getAllOptions(), false);
        listRoleTasks.removeOptions(listRoleTasks.getAllOptions(), false);
        var response = eventObject.response;
        var tupleNode = cordys.selectXMLNode(response, ".//*[local-name()='tuple']/*[local-name()='new']");
        if (tupleNode == null)
        {
           // regular get response instead of synchronize response
           tupleNode = cordys.selectXMLNode(response, ".//*[local-name()='tuple']/*[local-name()='old']");
        }
        var uiTaskNodes = cordys.selectXMLNodes(tupleNode, ".//*[local-name()='UITasks']/*[local-name()='UITask']");
        for (var i=0; i < uiTaskNodes.length;  i++)
        {    
            var seqNo = cordys.getNodeText(uiTaskNodes[i], ".//*[local-name()='SeqNo']", null);
            var name = cordys.getNodeText(uiTaskNodes[i], ".//*[local-name()='Name']", null);
            var assigned = cordys.getNodeText(uiTaskNodes[i], ".//*[local-name()='Assigned']", null);
            var option = {value:seqNo, description:name};
            var uiTask = {seqNo:seqNo,name:name};
            if (assigned == 'true')
            {
                listTasksAssigned.addOption(option);
                uiTask.assigned = true;
            }
            else
            {
                listTasksUnassigned.addOption(option);
                uiTask.assigned = false;
            }
            uiTasks[seqNo] = uiTask;
        }  
        var roleTaskNodes = cordys.selectXMLNodes(tupleNode, ".//*[local-name()='RoleTasks']/*[local-name()='RoleTask']");
        for (var i=0; i < roleTaskNodes.length;  i++)
        { 
            var seqNo = cordys.getNodeText(roleTaskNodes[i], ".//*[local-name()='SeqNo']", null);
            var name = cordys.getNodeText(roleTaskNodes[i], ".//*[local-name()='Name']", null);
            var option = {value:seqNo, description:name};
            listRoleTasks.addOption(option);
        }
        tasksLoaded = true;
    }
    application.showBusy(false);
    statusInfo = "";
    setAppInfoBar();       
}

function tabgroup_ontabfocus(eventObject)
{
    artifactInfo = listUsers.getValue();
    setAppInfoBar();
    currentTabId = eventObject.tabId;
    var allItems = listUsers.getAllOptions();
    if (allItems.length > 0)
    {
        if (eventObject.tabId == "tabpgRoles")
        {
            if (!rolesLoaded)
            {
                getUserRoles();
            }
        }   
        else if (eventObject.tabId == "tabpgTasks")
        {
            if (!tasksLoaded)
            {
                getUserTasks();
            }
        } 
        else if (eventObject.tabId == "tabpgTeams")
        {     
            if (!teamsLoaded)
            {
                getUserTeams();
            }
        }
    }
}

/*
 * Move the selected unassigned teamroles to the assignments
 */
function btnAssignTeam_Click(eventObject)
{
    var selectedItems = listTeamsUnassigned.getSelectedOptions();
    for (var itemIndex in selectedItems)
    {
        listTeamsAssigned.addOption(selectedItems[itemIndex],false);
        listTeamsUnassigned.removeOption(selectedItems[itemIndex], false);
        // maintain the teamroles in global array and in tuple/new
        teamRoles[selectedItems[itemIndex].value].assigned = true;
        teamsChanged = true;   
    }
    if (teamsChanged)
    {
        editTeamTupleNew();    
        tabpgTeams.setCaption("Teams*");
        checkEnableDisable();
    }    
    fillPrincipleUnitOptions();    
}

/*
 * Move the selected assignments to unassigned
 */
function btnUnassignTeam_Click(eventObject)
{
    var selectedItems = listTeamsAssigned.getSelectedOptions();
    for (var itemIndex in selectedItems)
    {
        listTeamsUnassigned.addOption(selectedItems[itemIndex],false);
        listTeamsAssigned.removeOption(selectedItems[itemIndex], false);
        // maintain the teamroles in global array and in tuple/new
        teamRoles[selectedItems[itemIndex].value].assigned = false;
        teamsChanged = true;
    }     
    if (teamsChanged)
    {
        editTeamTupleNew();
        tabpgTeams.setCaption("Teams*");
        checkEnableDisable();
    }     
    fillPrincipleUnitOptions();    
}

/*
 * Process the updates to teamroles as per the assigned flag into the tuple/new
 */
function editTeamTupleNew()
{
    if (UIUserTeamsModel.activeTuple != null)
    {
        UIUserTeamsModel.edit();
        var tupleNew = UIUserTeamsModel.getActiveBusinessObject().getNew();
        if (tupleNew != null)
        {
            var teamRoleNodes = cordys.selectXMLNodes(tupleNew, ".//*[local-name()='TeamRole']");
            for (var i=0; i < teamRoleNodes.length;  i++)
            {
                var seqNo = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='SeqNo']", null);
                if (seqNo != null)
                {
                    var assignedNode = cordys.selectXMLNode(teamRoleNodes[i], ".//*[local-name()='Assigned']");
                    if (assignedNode != null)
                    {
                        var assigned = teamRoles[seqNo].assigned;
                        cordys.setTextContent(assignedNode, assigned.toString());
                    }
                }
            }
        }
    }  
}

/*
 * Process the GetUserTeams response into the global array on teamRoles.
 * Compose the UI lists.
 * Derive the list of units for principle unit selection
 */
function UIUserTeamsModel_OnResponse(eventObject)
{
    if (eventObject.httpStatusCode != 500)
    {
        // for undo situation:
        tabpgTeams.setCaption("Teams");
        teamsChanged = false;
        checkEnableDisable();  
       
        teamRoles.length = 0;
        listTeamsAssigned.removeOptions(listTeamsAssigned.getAllOptions(),false);
        listTeamsUnassigned.removeOptions(listTeamsUnassigned.getAllOptions(),false);
        var response = eventObject.response;
        var tupleNode = cordys.selectXMLNode(response, ".//*[local-name()='tuple']/*[local-name()='new']");
        if (tupleNode == null)
        {
           // regular get response instead of synchronize response
           tupleNode = cordys.selectXMLNode(response, ".//*[local-name()='tuple']/*[local-name()='old']");
        }
        var teamRoleNodes = cordys.selectXMLNodes(tupleNode, ".//*[local-name()='TeamRole']");
        for (var i=0; i < teamRoleNodes.length;  i++)
        {    
            var seqNo = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='SeqNo']", null);
            var description = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='Description']", null);
            var unitID = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='UnitID']", null);
            var unitName = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='UnitName']", null);
            var unitQName = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='UnitQName']", null);
            var roleDN = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='RoleDN']", null);
            var assigned = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='Assigned']", null);
            //var assignmentID = cordys.getNodeText(teamRoleNodes[i], ".//*[local-name()='AssignmentID']", null);
            var option = {value:seqNo, description:description};
            var teamRole = {seqNo:seqNo,unitID:unitID,unitName:unitName,unitQName:unitQName,roleDN:roleDN};
            if (assigned == 'true')
            {
                listTeamsAssigned.addOption(option);
                teamRole.assigned = true;
            }
            else
            {
                listTeamsUnassigned.addOption(option);
                teamRole.assigned = false;
            }
            teamRoles[seqNo] = teamRole;
        }
        teamsLoaded = true;
        fillPrincipleUnitOptions();   
    }
    statusInfo = "";
    setAppInfoBar();   
}

/*
 * Derive the list of units for principle unit selection
 */
function fillPrincipleUnitOptions()
{
    var optionArray = new Array();
    var selectedItems = listTeamsAssigned.getAllOptions();    
    for (var itemIndex in selectedItems)
    {
        var unitID = teamRoles[selectedItems[itemIndex].value].unitID;
        var unitName = teamRoles[selectedItems[itemIndex].value].unitName;  
        var unitOption = {value:unitID,description:unitName};
        optionArray[unitID] = unitOption;
    }
    var slctUnitOption = {value:"",description:""};
    slctUnit.addOption(slctUnitOption,true,1,false);
    var indexArray = new Array();
    var removeNo = 0;
    var currentOptions = slctUnit.getAllOptions();    
    for (var optionIndex in currentOptions)
    {
        var unitID = currentOptions[optionIndex].value;
        if ((unitID != "") && (typeof(optionArray[unitID]) == "undefined"))
        {
            indexArray[removeNo] = optionIndex;
            removeNo++;
        }
    }
    slctUnit.removeOptions(indexArray, false);
    var selectedItems = listTeamsAssigned.getAllOptions();
    for (var itemIndex in selectedItems)
    {
        var unitID = teamRoles[selectedItems[itemIndex].value].unitID;
        var unitName = teamRoles[selectedItems[itemIndex].value].unitName;  
        var slctUnitOption = {value:unitID,description:unitName};
        slctUnit.addOption(slctUnitOption,true,999,false);
    }
}

function UIUserTeamsModel_BeforeSynchronize(eventObject)
{
    // check if principle unit still to be selected
    var selectedPrincipleUnitID = slctUnit.getValue();
    if ((selectedPrincipleUnitID == null) || (selectedPrincipleUnitID == ""))
    {
        if (slctUnit.getAllOptions().length > 2)
        {
            application.showError("Select the principle unit.");
            eventObject.returnValue = false;
        }
    }    
}

function UIUserTeamsModel_OnRequest(eventObject)
{
    var orgUserDN = listUsers.getValue();
    if ((orgUserDN != null) && (orgUserDN != ""))
    {
        var request = eventObject.request;
        var orgUserDNNode = cordys.selectXMLNode(request, ".//*[local-name()='OrgUserDN']");
        cordys.setTextContent(orgUserDNNode, orgUserDN);
    }    
}

/*
 * Set arguments for GetUserTasks request
 */
function UIUserTasksModel_OnRequest(eventObject)
{
    var orgUserDN = listUsers.getValue();
    if ((orgUserDN != null) && (orgUserDN != ""))
    {
        var request = eventObject.request;
        var orgUserDNNode = cordys.selectXMLNode(request, ".//*[local-name()='OrgUserDN']");
        cordys.setTextContent(orgUserDNNode, orgUserDN);
        var firstRequestNode = cordys.selectXMLNode(request, ".//*[local-name()='FirstRequest']");
        cordys.setTextContent(firstRequestNode, getFirstTasksRequest().toString());
        setFirstTasksRequest(false);
    }    
}

function UpdateAssignedRolesModel_OnResponse(eventObject)
{
    if (eventObject.httpStatusCode != 500)
    {
        tabpgRoles.setCaption("Roles");
        rolesChanged = false;
        checkEnableDisable();
    }
}

function UIUserTasksModel_OnSynchronized(eventObject)
{
    if (!UIUserTasksModel.soapFaultOccurred)
    {
        tabpgTasks.setCaption("Tasks");
        tasksChanged = false;
        checkEnableDisable();
    }
}

function UIUserTeamsModel_OnSynchronized(eventObject)
{
    if (!UIUserTeamsModel.soapFaultOccurred)
    {
       tabpgTeams.setCaption("Teams");
       teamsChanged = false;
       checkEnableDisable();    
    }
}

function checkEnableDisable()
{
    if (!rolesChanged && !tasksChanged && !teamsChanged)
    {
        listUsers.enable();
        btnRefresh.enable();
        btnSave.disable();
        btnUndo.disable();
    }
    else
    {
        listUsers.disable();
        btnRefresh.disable();
        btnSave.enable();
        btnUndo.enable();
    }
}

function slctUnit_Change(eventObject)
{
    teamsChanged = true;
    tabpgTeams.setCaption("Teams*");
    checkEnableDisable();    
}

function btnSave_Click(eventObject)
{
    if (teamsChanged)
    {
        application.showBusy(true, "Saving...");
    }
    statusInfo = "Saving...";
    setAppInfoBar();     
    setTimeout("saveData()", 20);
}

function btnRefresh_Click(eventObject)
{
    readUsers();
}

function btnUndo_Click(eventObject)
{
    UIUserTasksModel.undo();
    UIUserTeamsModel.undo();
    if (rolesChanged)
    {
        rolesChanged = false;
        tabpgRoles.setCaption("Roles");        
    }
    if (tasksChanged)
    {
        tasksChanged = false;
        tabpgTasks.setCaption("Tasks");        
    } 
    if (teamsChanged)
    {
        teamsChanged = false;
        tabpgTeams.setCaption("Teams");        
    }              
    readData();    
}

function setAppInfoBar()
{
    var info = statusInfo;
    if (info == "")
    {
        info = artifactInfo;
    }
    appInfoBar.setStatus(info);
}

function listTeamsUnassigned_Change(eventObject)
{
    var trIndex = listTeamsUnassigned.getValue();
    artifactInfo = teamRoles[trIndex].unitQName + "/" + teamRoles[trIndex].roleDN;
    setAppInfoBar();
}

function listTeamsAssigned_Change(eventObject)
{
    var trIndex = listTeamsAssigned.getValue();
    artifactInfo = teamRoles[trIndex].unitQName + "/" + teamRoles[trIndex].roleDN;
    setAppInfoBar();
}]]>
			</xformsscript>
			<xforms:action
				ev:event="xforms-initialize-done">
				<xforms:Form_InitDone/>
			</xforms:action>
		</xformhtml>
	</XFormContent>
	<XFormWSDL/>
	<automatic>false</automatic>
	<caption></caption>
	<data/>
	<height></height>
	<imageUrl></imageUrl>
	<info></info>
	<isInternal>false</isInternal>
	<isLegacy>false</isLegacy>
	<isPublicImage>false</isPublicImage>
	<left></left>
	<mode>full</mode>
	<parameters/>
	<qualifiedclassname></qualifiedclassname>
	<showOnStartPage>false</showOnStartPage>
	<taskDescription>UserAssignments</taskDescription>
	<taskName>UserAssignments</taskName>
	<title>true</title>
	<top></top>
	<type>XForm</type>
	<width></width>
	<CompositeControls/>
	<Htms/>
	<Images/>
	<InstanceSchemaFragments/>
	<Javascripts>
		<uri
			id="0027132C-F779-11E3-F2AE-B66E4CE737C6"
			path="UserAdmin/com-cordys-coe/useradmin/web/com/ekemait/useradmin/js/useradmin.js"
			type="com.cordys.cws.documenttypes.javascript.Javascript"
		/>
	</Javascripts>
	<ReferredXForms/>
	<Representations/>
	<StyleSheets/>
	<TranslatableApplications/>
	<TranslatableName>
		<TranslatableText
			type="com.cordys.translation.TranslatableText"
			RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB2D3D2A">
			<DocumentID>0027132C-F779-11E2-F8DA-2482DB2D1D2A</DocumentID>
			<Name>0027132C-F779-11E2-F8DA-2482DB2D1D2A</Name>
			<Description>0027132C-F779-11E2-F8DA-2482DB2D1D2A</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:14:14.884</CreationDate>
			<Notes/>
			<Identifier>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2D5D2A"
				/>
			</Identifier>
		</TranslatableText>
	</TranslatableName>
	<TranslatableUITexts>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB2BBD2A">
			<DocumentID>0027132C-F779-11E2-F8DA-2482DB2B9D2A</DocumentID>
			<Name>0027132C-F779-11E2-F8DA-2482DB2B9D2A</Name>
			<Description>0027132C-F779-11E2-F8DA-2482DB2B9D2A</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:15:32.736</CreationDate>
			<Notes/>
			<UIRef>listUsers</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB2AFD2A">
					<DocumentID>0027132C-F779-11E2-F8DA-2482DB2ADD2A</DocumentID>
					<Name>0027132C-F779-11E2-F8DA-2482DB2ADD2A</Name>
					<Description>0027132C-F779-11E2-F8DA-2482DB2ADD2A</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-05-27T15:15:32.736</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E2-F8DA-2482DB2B1D2A"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB27FD2A">
			<DocumentID>0027132C-F779-11E2-F8DA-2482DB27DD2A</DocumentID>
			<Name>0027132C-F779-11E2-F8DA-2482DB27DD2A</Name>
			<Description>0027132C-F779-11E2-F8DA-2482DB27DD2A</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:19:57.289</CreationDate>
			<Notes/>
			<UIRef>tabpgRoles</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E2-F8DC-0E314D7E9D2A">
					<DocumentID>0027132C-F779-11E2-F8DC-0E314D7E7D2A</DocumentID>
					<Name>0027132C-F779-11E2-F8DC-0E314D7E7D2A</Name>
					<Description>0027132C-F779-11E2-F8DC-0E314D7E7D2A</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-05-27T15:19:57.288</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E2-F8DC-0E314D7EBD2A"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB26FD2A">
			<DocumentID>0027132C-F779-11E2-F8DA-2482DB26DD2A</DocumentID>
			<Name>0027132C-F779-11E2-F8DA-2482DB26DD2A</Name>
			<Description>0027132C-F779-11E2-F8DA-2482DB26DD2A</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:19:57.287</CreationDate>
			<Notes/>
			<UIRef>tabpgTasks</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E2-F8DC-0E314D7DDD2A">
					<DocumentID>0027132C-F779-11E2-F8DC-0E314D7DBD2A</DocumentID>
					<Name>0027132C-F779-11E2-F8DC-0E314D7DBD2A</Name>
					<Description>0027132C-F779-11E2-F8DC-0E314D7DBD2A</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-05-27T15:19:57.287</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E2-F8DC-0E314D7DFD2A"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E2-F8DC-0E314D7F5D2A">
			<DocumentID>0027132C-F779-11E2-F8DC-0E314D7F3D2A</DocumentID>
			<Name>0027132C-F779-11E2-F8DC-0E314D7F3D2A</Name>
			<Description>0027132C-F779-11E2-F8DC-0E314D7F3D2A</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:19:57.289</CreationDate>
			<Notes/>
			<UIRef>tabpgTeams</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E2-F8DC-0E314D7D1D2A">
					<DocumentID>0027132C-F779-11E2-F8DC-0E314D7CFD2A</DocumentID>
					<Name>0027132C-F779-11E2-F8DC-0E314D7CFD2A</Name>
					<Description>0027132C-F779-11E2-F8DC-0E314D7CFD2A</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-05-27T15:19:57.289</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E2-F8DC-0E314D7D3D2A"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E2-F8E0-63C9ECACDD2A">
			<DocumentID>0027132C-F779-11E2-F8E0-63C9ECACBD2A</DocumentID>
			<Name>0027132C-F779-11E2-F8E0-63C9ECACBD2A</Name>
			<Description>0027132C-F779-11E2-F8E0-63C9ECACBD2A</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T19:35:39.929</CreationDate>
			<Notes/>
			<UIRef>btnRefresh</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E2-F8E0-63C9ECAD1D2A">
					<DocumentID>0027132C-F779-11E2-F8E0-63C9ECACFD2A</DocumentID>
					<Name>0027132C-F779-11E2-F8E0-63C9ECACFD2A</Name>
					<Description>0027132C-F779-11E2-F8E0-63C9ECACFD2A</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-05-27T19:35:39.929</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E2-F8E0-63C9ECAD3D2A"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E3-EA3C-C8CCFAF7F208">
			<DocumentID>0027132C-F779-11E3-EA3C-C8CCFAF7D208</DocumentID>
			<Name>0027132C-F779-11E3-EA3C-C8CCFAF7D208</Name>
			<Description>0027132C-F779-11E3-EA3C-C8CCFAF7D208</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-11-20T13:19:53.019</CreationDate>
			<Notes/>
			<UIRef>btnSave</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E3-EA3C-C8CCFAF7B208">
					<DocumentID>0027132C-F779-11E3-EA3C-C8CCFAF79208</DocumentID>
					<Name>0027132C-F779-11E3-EA3C-C8CCFAF79208</Name>
					<Description>0027132C-F779-11E3-EA3C-C8CCFAF79208</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-11-20T13:19:53.02</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E2-F8DC-0E314D7B7D2A"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E3-EB3B-AB1693D73327">
			<DocumentID>0027132C-F779-11E3-EB3B-AB1693D71327</DocumentID>
			<Name>0027132C-F779-11E3-EB3B-AB1693D71327</Name>
			<Description>0027132C-F779-11E3-EB3B-AB1693D71327</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-11-30T16:39:11.523</CreationDate>
			<Notes/>
			<UIRef>btnRefresh</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E3-EB3B-AB1693D6F327">
					<DocumentID>0027132C-F779-11E3-EB3B-AB1693D6D327</DocumentID>
					<Name>0027132C-F779-11E3-EB3B-AB1693D6D327</Name>
					<Description>0027132C-F779-11E3-EB3B-AB1693D6D327</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-11-30T16:39:11.524</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E2-F8DC-B08FB4BF9D2A"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E3-EBE9-AA2F0FA4968F">
			<DocumentID>0027132C-F779-11E3-EBE9-AA2F0FA4768F</DocumentID>
			<Name>0027132C-F779-11E3-EBE9-AA2F0FA4768F</Name>
			<Description>0027132C-F779-11E3-EBE9-AA2F0FA4768F</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-12-07T15:38:07.756</CreationDate>
			<Notes/>
			<UIRef>btnUndo</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E3-EBE9-AA2F0FA3968F">
					<DocumentID>0027132C-F779-11E3-EBE9-AA2F0FA3768F</DocumentID>
					<Name>0027132C-F779-11E3-EBE9-AA2F0FA3768F</Name>
					<Description>0027132C-F779-11E3-EBE9-AA2F0FA3768F</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2013-12-07T15:38:07.757</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E3-EBE9-AA2F0FA3B68F"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
		<TranslatableUIText
			type="com.cordys.xforms.TranslatableUIText"
			RuntimeDocumentID="0027132C-F779-11E3-F5B7-536CB3221F70">
			<DocumentID>0027132C-F779-11E3-F5B7-536CB321FF70</DocumentID>
			<Name>0027132C-F779-11E3-F5B7-536CB321FF70</Name>
			<Description>0027132C-F779-11E3-F5B7-536CB321FF70</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2014-03-17T14:39:23.691</CreationDate>
			<Notes/>
			<UIRef>rte1</UIRef>
			<TooltipText/>
			<TranslatableName>
				<TranslatableText
					type="com.cordys.translation.TranslatableText"
					RuntimeDocumentID="0027132C-F779-11E3-F5B7-536CB3201F70">
					<DocumentID>0027132C-F779-11E3-F5B7-536CB31FFF70</DocumentID>
					<Name>0027132C-F779-11E3-F5B7-536CB31FFF70</Name>
					<Description>0027132C-F779-11E3-F5B7-536CB31FFF70</Description>
					<CreatedBy>cordysadm</CreatedBy>
					<CreationDate>2014-03-17T14:42:43.688</CreationDate>
					<Notes/>
					<Identifier>
						<uri
							id="0027132C-F779-11E3-F5B7-536CB3203F70"
						/>
					</Identifier>
				</TranslatableText>
			</TranslatableName>
			<XForm>
				<uri
					id="0027132C-F779-11E2-F8DA-2482DB2EDD2A"
				/>
			</XForm>
		</TranslatableUIText>
	</TranslatableUITexts>
	<Webservices>
		<uri
			id="0027132C-F779-11E2-F8DA-2706C1B91D2A"
		/>
		<uri
			id="0027132C-F779-11E2-F895-50936EB69D2A"
		/>
		<uri
			id="0027132C-F779-11E2-F898-EC437057DD2A"
		/>
		<uri
			id="0027132C-F779-11E2-F87C-153F6F343D2A"
		/>
		<uri
			id="0027132C-F779-11E2-F7E1-F21D449592DA"
		/>
	</Webservices>
	<aclFragments/>
	<deliveryModels/>
	<image/>
	<input/>
	<messageParts>
		<MessagePart
			type="com.cordys.task.MessagePart"
			RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB2E3D2A">
			<DocumentID>0027132C-F779-11E2-F8DA-2482DB2E1D2A</DocumentID>
			<Name>UIOrgUserBasicModel</Name>
			<Description>UIOrgUserBasicModel</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:14:14.884</CreationDate>
			<Notes/>
			<isRefExists>true</isRefExists>
			<namespace>http://schemas.cordys.com/coe/useradmin/ui/1.0</namespace>
			<operationName>GetUIOrgUserBasicObjects</operationName>
		</MessagePart>
		<MessagePart
			type="com.cordys.task.MessagePart"
			RuntimeDocumentID="0027132C-F779-11E2-F8DA-2482DB2ABD2A">
			<DocumentID>0027132C-F779-11E2-F8DA-2482DB2A9D2A</DocumentID>
			<Name>freeformcontrols</Name>
			<Description>freeformcontrols</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:15:32.736</CreationDate>
			<Notes/>
			<isRefExists>false</isRefExists>
			<namespace>http://schemas.cordys.com/1.0/xforms/processapi</namespace>
			<operationName>freeformcontrols</operationName>
		</MessagePart>
		<MessagePart
			type="com.cordys.task.MessagePart"
			RuntimeDocumentID="0027132C-F779-11E2-F8DC-0E314D763D2A">
			<DocumentID>0027132C-F779-11E2-F8DC-0E314D761D2A</DocumentID>
			<Name>GetUIRoleTreesModel</Name>
			<Description>GetUIRoleTreesModel</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:42:59.793</CreationDate>
			<Notes/>
			<isRefExists>true</isRefExists>
			<namespace>http://schemas.cordys.com/coe/useradmin/ui/1.0</namespace>
			<operationName>GetUIRoleTrees</operationName>
		</MessagePart>
		<MessagePart
			type="com.cordys.task.MessagePart"
			RuntimeDocumentID="0027132C-F779-11E2-F8DC-0E314D75FD2A">
			<DocumentID>0027132C-F779-11E2-F8DC-0E314D75DD2A</DocumentID>
			<Name>UpdateAssignedRolesModel</Name>
			<Description>UpdateAssignedRolesModel</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T15:42:59.792</CreationDate>
			<Notes/>
			<isRefExists>true</isRefExists>
			<namespace>http://schemas.cordys.com/coe/useradmin/ui/1.0</namespace>
			<operationName>UpdateAssignedRoles</operationName>
		</MessagePart>
		<MessagePart
			type="com.cordys.task.MessagePart"
			RuntimeDocumentID="0027132C-F779-11E2-F8E0-63C9ECA75D2A">
			<DocumentID>0027132C-F779-11E2-F8E0-63C9ECA73D2A</DocumentID>
			<Name>UIUserTasksModel</Name>
			<Description>UIUserTasksModel</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T22:17:07.872</CreationDate>
			<Notes/>
			<isRefExists>true</isRefExists>
			<namespace>http://schemas.cordys.com/coe/useradmin/ui/1.0</namespace>
			<operationName>GetUIUserTasks</operationName>
		</MessagePart>
		<MessagePart
			type="com.cordys.task.MessagePart"
			RuntimeDocumentID="0027132C-F779-11E2-F8E4-3D4E6590DD2A">
			<DocumentID>0027132C-F779-11E2-F8E4-3D4E6590BD2A</DocumentID>
			<Name>UIUserTeamsModel</Name>
			<Description>UIUserTeamsModel</Description>
			<CreatedBy>cordysadm</CreatedBy>
			<CreationDate>2013-05-27T23:43:51.934</CreationDate>
			<Notes/>
			<isRefExists>true</isRefExists>
			<namespace>http://schemas.cordys.com/coe/useradmin/ui/1.0</namespace>
			<operationName>GetUIUserTeams</operationName>
		</MessagePart>
	</messageParts>
	<messages/>
	<output/>
	<tagsContainer/>
	<taskParts/>
</XFormDesigntime>
